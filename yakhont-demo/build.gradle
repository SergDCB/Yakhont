/*
 * Copyright (C) 2016 akha, a.k.a. Alexander Kharitonov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        flatDir dirs: '../yakhont-weaver/build/libs'                        // Yakhont weaver
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'          // Dagger 2

        classpath 'akha.yakhont.weaver:yakhont-weaver:0.9.17'               // Yakhont weaver
        classpath 'org.javassist:javassist:3.20.0-GA'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion           25
    buildToolsVersion          '25.0.2'

    //noinspection GroovyMissingReturnStatement
    defaultConfig {
        applicationId           'akha.yakhont.demo'
        minSdkVersion            9
        //noinspection OldTargetApi
        targetSdkVersion        21
        versionCode            10000
        versionName           '1.0'

        resConfigs              'en', 'ru'
    }

    compileOptions {
        sourceCompatibility     JavaVersion.VERSION_1_7
        targetCompatibility     JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError            false
    }

    signingConfigs {
        config {
            storeFile file('../../misc/testkeystore.jks')
            keyAlias       'test'
            keyPassword    'qwerty'
            storePassword  'qwerty'
        }
    }

    buildTypes {
        release {
            minifyEnabled       true
            signingConfig       signingConfigs.config

            // normally it added from aar automatically - but this demo is not dependent on yakhont.aar
            proguardFile                '../yakhont/proguard/proguard-consumer.pro'

            rootProject.ext.projectProGuardFiles.each {
                //noinspection GroovyAssignabilityCheck
                proguardFile            '../proguard/libs/' + it
            }
            proguardFile                './proguard/libs/proguard-support-design.pro'
            proguardFile                './proguard/proguard-project-app.pro'
            proguardFile                '../proguard/proguard-project.pro'
            //noinspection GroovyAssignabilityCheck
            proguardFile                getDefaultProguardFile('proguard-android.txt')
        }
    }
}
                                                                            // in alphabetical order:
dependencies {
    compile  'com.google.dagger:dagger:2.0.2'                               // Dagger2
    apt      'com.google.dagger:dagger-compiler:2.0.2'
    provided 'javax.annotation:jsr250-api:1.0'

    compile  'com.android.support:appcompat-v7:25.1.0'                      // Google
    compile  'com.android.support:design:25.1.0'
    compile  'com.google.android.gms:play-services-location:10.0.1'

    compile  'com.squareup.retrofit:retrofit:1.9.0'                         // Retrofit

    compile  'io.reactivex:rxjava:1.1.6'                                    // Rx

    compile project(':yakhont')                                             // Yakhont
}

android.variantFilter { variant ->
    if (variant.buildType.name.equals('debug')) {     // or 'release'; weaver can't handle both release and debug at the same time
        variant.setIgnore(true);
    }
}

String[] weaverConfigFiles = null   // use default one; or something like "new String[] {projectDir.absolutePath + '/weaver.config'}"
boolean weaverDebug = false, weaverAddConfig = true

//noinspection GroovyAssignabilityCheck, UnnecessaryQualifiedReference
android.registerTransform(new akha.yakhont.weaver.WeaverTransform(weaverDebug, android.defaultConfig.applicationId,
        android.bootClasspath.join(File.pathSeparator), weaverConfigFiles, weaverAddConfig))
/*
// to avoid using the Transform API, you can try the following:
android.applicationVariants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        new akha.yakhont.weaver.Weaver().run(weaverDebug, android.defaultConfig.applicationId,
                javaCompile.destinationDir.toString(), javaCompile.classpath.asPath,
                android.bootClasspath.join(File.pathSeparator), weaverConfigFiles, weaverAddConfig)
    }
}
*/
